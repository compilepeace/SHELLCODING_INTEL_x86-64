
scratch.elf:     file format elf32-littlearm


Disassembly of section .interp:

00010154 <.interp>:
   10154:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
   10158:	2d646c2f 	stclcs	12, cr6, [r4, #-188]!	; 0xffffff44
   1015c:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
   10160:	6f732e78 	svcvs	0x00732e78
   10164:	Address 0x0000000000010164 is out of bounds.


Disassembly of section .note.gnu.build-id:

00010168 <.note.gnu.build-id>:
   10168:	00000004 	andeq	r0, r0, r4
   1016c:	00000014 	andeq	r0, r0, r4, lsl r0
   10170:	00000003 	andeq	r0, r0, r3
   10174:	00554e47 	subseq	r4, r5, r7, asr #28
   10178:	96fb20ea 	ldrbtls	r2, [fp], sl, ror #1
   1017c:	3b107ecd 	blcc	42fcb8 <__bss_end__+0x40ec8c>
   10180:	f3e5b6f1 	vqshlu.s64	<illegal reg q13.5>, <illegal reg q8.5>, #37	; 0x25
   10184:	33314eda 	teqcc	r1, #3488	; 0xda0
   10188:	2298e930 	addscs	lr, r8, #48, 18	; 0xc0000

Disassembly of section .note.ABI-tag:

0001018c <__abi_tag>:
   1018c:	00000004 	andeq	r0, r0, r4
   10190:	00000010 	andeq	r0, r0, r0, lsl r0
   10194:	00000001 	andeq	r0, r0, r1
   10198:	00554e47 	subseq	r4, r5, r7, asr #28
   1019c:	00000000 	andeq	r0, r0, r0
   101a0:	00000003 	andeq	r0, r0, r3
   101a4:	00000002 	andeq	r0, r0, r2
   101a8:	00000000 	andeq	r0, r0, r0

Disassembly of section .gnu.hash:

000101ac <.gnu.hash>:
   101ac:	00000002 	andeq	r0, r0, r2
   101b0:	00000002 	andeq	r0, r0, r2
   101b4:	00000001 	andeq	r0, r0, r1
   101b8:	00000005 	andeq	r0, r0, r5
   101bc:	20024800 	andcs	r4, r2, r0, lsl #16
   101c0:	00000002 	andeq	r0, r0, r2
   101c4:	00000003 	andeq	r0, r0, r3
   101c8:	f63d4e2f 			; <UNDEFINED> instruction: 0xf63d4e2f
   101cc:	0f11ed7d 	svceq	0x0011ed7d

Disassembly of section .dynsym:

000101d0 <.dynsym>:
	...
   101e0:	00000038 	andeq	r0, r0, r8, lsr r0
	...
   101ec:	00000020 	andeq	r0, r0, r0, lsr #32
   101f0:	00000001 	andeq	r0, r0, r1
	...
   101fc:	00000012 	andeq	r0, r0, r2, lsl r0
   10200:	00000013 	andeq	r0, r0, r3, lsl r0
	...
   1020c:	00000012 	andeq	r0, r0, r2, lsl r0

Disassembly of section .dynstr:

00010210 <.dynstr>:
   10210:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
   10214:	5f636269 	svcpl	0x00636269
   10218:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
   1021c:	616d5f74 	smcvs	54772	; 0xd5f4
   10220:	61006e69 	tstvs	r0, r9, ror #28
   10224:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
   10228:	62696c00 	rsbvs	r6, r9, #0, 24
   1022c:	6f732e63 	svcvs	0x00732e63
   10230:	4700362e 	strmi	r3, [r0, -lr, lsr #12]
   10234:	4342494c 	movtmi	r4, #10572	; 0x294c
   10238:	342e325f 	strtcc	r3, [lr], #-607	; 0xfffffda1
   1023c:	494c4700 	stmdbmi	ip, {r8, r9, sl, lr}^
   10240:	325f4342 	subscc	r4, pc, #134217729	; 0x8000001
   10244:	0034332e 	eorseq	r3, r4, lr, lsr #6
   10248:	6d675f5f 	stclvs	15, cr5, [r7, #-380]!	; 0xfffffe84
   1024c:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
   10250:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
   10254:	Address 0x0000000000010254 is out of bounds.


Disassembly of section .gnu.version:

00010258 <.gnu.version>:
   10258:	00010000 	andeq	r0, r1, r0
   1025c:	00030002 	andeq	r0, r3, r2

Disassembly of section .gnu.version_r:

00010260 <.gnu.version_r>:
   10260:	00020001 	andeq	r0, r2, r1
   10264:	00000019 	andeq	r0, r0, r9, lsl r0
   10268:	00000010 	andeq	r0, r0, r0, lsl r0
   1026c:	00000000 	andeq	r0, r0, r0
   10270:	0d696914 			; <UNDEFINED> instruction: 0x0d696914
   10274:	00030000 	andeq	r0, r3, r0
   10278:	00000023 	andeq	r0, r0, r3, lsr #32
   1027c:	00000010 	andeq	r0, r0, r0, lsl r0
   10280:	069691b4 			; <UNDEFINED> instruction: 0x069691b4
   10284:	00020000 	andeq	r0, r2, r0
   10288:	0000002d 	andeq	r0, r0, sp, lsr #32
   1028c:	00000000 	andeq	r0, r0, r0

Disassembly of section .rel.dyn:

00010290 <.rel.dyn>:
   10290:	00021018 	andeq	r1, r2, r8, lsl r0
   10294:	00000115 	andeq	r0, r0, r5, lsl r1

Disassembly of section .rel.plt:

00010298 <.rel.plt>:
   10298:	0002100c 	andeq	r1, r2, ip
   1029c:	00000216 	andeq	r0, r0, r6, lsl r2
   102a0:	00021010 	andeq	r1, r2, r0, lsl r0
   102a4:	00000116 	andeq	r0, r0, r6, lsl r1
   102a8:	00021014 	andeq	r1, r2, r4, lsl r0
   102ac:	00000316 	andeq	r0, r0, r6, lsl r3

Disassembly of section .init:

000102b0 <_init>:
   102b0:	e92d4008 	push	{r3, lr}
   102b4:	eb00001f 	bl	10338 <call_weak_fn>
   102b8:	e8bd8008 	pop	{r3, pc}

Disassembly of section .plt:

000102bc <.plt>:
   102bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   102c0:	e59fe004 	ldr	lr, [pc, #4]	; 102cc <.plt+0x10>
   102c4:	e08fe00e 	add	lr, pc, lr
   102c8:	e5bef008 	ldr	pc, [lr, #8]!
   102cc:	00010d34 	andeq	r0, r1, r4, lsr sp

000102d0 <__libc_start_main@plt>:
   102d0:	e28fc600 	add	ip, pc, #0, 12
   102d4:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   102d8:	e5bcfd34 	ldr	pc, [ip, #3380]!	; 0xd34

000102dc <__gmon_start__@plt>:
   102dc:	e28fc600 	add	ip, pc, #0, 12
   102e0:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   102e4:	e5bcfd2c 	ldr	pc, [ip, #3372]!	; 0xd2c

000102e8 <abort@plt>:
   102e8:	e28fc600 	add	ip, pc, #0, 12
   102ec:	e28cca10 	add	ip, ip, #16, 20	; 0x10000
   102f0:	e5bcfd24 	ldr	pc, [ip, #3364]!	; 0xd24

Disassembly of section .text:

000102f4 <_start>:
   102f4:	e3a0b000 	mov	fp, #0
   102f8:	e3a0e000 	mov	lr, #0
   102fc:	e49d1004 	pop	{r1}		; (ldr r1, [sp], #4)
   10300:	e1a0200d 	mov	r2, sp
   10304:	e52d2004 	push	{r2}		; (str r2, [sp, #-4]!)
   10308:	e52d0004 	push	{r0}		; (str r0, [sp, #-4]!)
   1030c:	e59fa01c 	ldr	sl, [pc, #28]	; 10330 <_start+0x3c>
   10310:	e28f3018 	add	r3, pc, #24
   10314:	e08aa003 	add	sl, sl, r3
   10318:	e3a03000 	mov	r3, #0
   1031c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
   10320:	e59f000c 	ldr	r0, [pc, #12]	; 10334 <_start+0x40>
   10324:	e79a0000 	ldr	r0, [sl, r0]
   10328:	ebffffe8 	bl	102d0 <__libc_start_main@plt>
   1032c:	ebffffed 	bl	102e8 <abort@plt>
   10330:	00010cd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10334:	0000001c 	andeq	r0, r0, ip, lsl r0

00010338 <call_weak_fn>:
   10338:	e59f3014 	ldr	r3, [pc, #20]	; 10354 <call_weak_fn+0x1c>
   1033c:	e59f2014 	ldr	r2, [pc, #20]	; 10358 <call_weak_fn+0x20>
   10340:	e08f3003 	add	r3, pc, r3
   10344:	e7932002 	ldr	r2, [r3, r2]
   10348:	e3520000 	cmp	r2, #0
   1034c:	012fff1e 	bxeq	lr
   10350:	eaffffe1 	b	102dc <__gmon_start__@plt>
   10354:	00010cb8 			; <UNDEFINED> instruction: 0x00010cb8
   10358:	00000018 	andeq	r0, r0, r8, lsl r0

0001035c <deregister_tm_clones>:
   1035c:	e59f0018 	ldr	r0, [pc, #24]	; 1037c <deregister_tm_clones+0x20>
   10360:	e59f3018 	ldr	r3, [pc, #24]	; 10380 <deregister_tm_clones+0x24>
   10364:	e1530000 	cmp	r3, r0
   10368:	012fff1e 	bxeq	lr
   1036c:	e59f3010 	ldr	r3, [pc, #16]	; 10384 <deregister_tm_clones+0x28>
   10370:	e3530000 	cmp	r3, #0
   10374:	012fff1e 	bxeq	lr
   10378:	e12fff13 	bx	r3
   1037c:	00021028 	andeq	r1, r2, r8, lsr #32
   10380:	00021028 	andeq	r1, r2, r8, lsr #32
   10384:	00000000 	andeq	r0, r0, r0

00010388 <register_tm_clones>:
   10388:	e59f0024 	ldr	r0, [pc, #36]	; 103b4 <register_tm_clones+0x2c>
   1038c:	e59f3024 	ldr	r3, [pc, #36]	; 103b8 <register_tm_clones+0x30>
   10390:	e0433000 	sub	r3, r3, r0
   10394:	e1a01fa3 	lsr	r1, r3, #31
   10398:	e0811143 	add	r1, r1, r3, asr #2
   1039c:	e1b010c1 	asrs	r1, r1, #1
   103a0:	012fff1e 	bxeq	lr
   103a4:	e59f3010 	ldr	r3, [pc, #16]	; 103bc <register_tm_clones+0x34>
   103a8:	e3530000 	cmp	r3, #0
   103ac:	012fff1e 	bxeq	lr
   103b0:	e12fff13 	bx	r3
   103b4:	00021028 	andeq	r1, r2, r8, lsr #32
   103b8:	00021028 	andeq	r1, r2, r8, lsr #32
   103bc:	00000000 	andeq	r0, r0, r0

000103c0 <__do_global_dtors_aux>:
   103c0:	e92d4010 	push	{r4, lr}
   103c4:	e59f4018 	ldr	r4, [pc, #24]	; 103e4 <__do_global_dtors_aux+0x24>
   103c8:	e5d43000 	ldrb	r3, [r4]
   103cc:	e3530000 	cmp	r3, #0
   103d0:	18bd8010 	popne	{r4, pc}
   103d4:	ebffffe0 	bl	1035c <deregister_tm_clones>
   103d8:	e3a03001 	mov	r3, #1
   103dc:	e5c43000 	strb	r3, [r4]
   103e0:	e8bd8010 	pop	{r4, pc}
   103e4:	00021028 	andeq	r1, r2, r8, lsr #32

000103e8 <frame_dummy>:
   103e8:	eaffffe6 	b	10388 <register_tm_clones>

000103ec <main>:
   103ec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   103f0:	e28db000 	add	fp, sp, #0
   103f4:	e24dd00c 	sub	sp, sp, #12
   103f8:	e50b0008 	str	r0, [fp, #-8]
   103fc:	e50b100c 	str	r1, [fp, #-12]
   10400:	e59f300c 	ldr	r3, [pc, #12]	; 10414 <main+0x28>
   10404:	e1a00003 	mov	r0, r3
   10408:	e28bd000 	add	sp, fp, #0
   1040c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10410:	e12fff1e 	bx	lr
   10414:	55667788 	strbpl	r7, [r6, #-1928]!	; 0xfffff878

Disassembly of section .fini:

00010418 <_fini>:
   10418:	e92d4008 	push	{r3, lr}
   1041c:	e8bd8008 	pop	{r3, pc}

Disassembly of section .rodata:

00010420 <_IO_stdin_used>:
   10420:	00020001 	andeq	r0, r2, r1

00010424 <all_implied_fbits>:
   10424:	0000003b 	andeq	r0, r0, fp, lsr r0
   10428:	0000003e 	andeq	r0, r0, lr, lsr r0
   1042c:	0000000b 	andeq	r0, r0, fp
   10430:	0000003e 	andeq	r0, r0, lr, lsr r0
   10434:	00000010 	andeq	r0, r0, r0, lsl r0
   10438:	0000003e 	andeq	r0, r0, lr, lsr r0
   1043c:	00000025 	andeq	r0, r0, r5, lsr #32
   10440:	0000003e 	andeq	r0, r0, lr, lsr r0
   10444:	00000033 	andeq	r0, r0, r3, lsr r0
   10448:	0000003e 	andeq	r0, r0, lr, lsr r0
   1044c:	00000003 	andeq	r0, r0, r3
   10450:	0000003e 	andeq	r0, r0, lr, lsr r0
   10454:	00000006 	andeq	r0, r0, r6
   10458:	0000003e 	andeq	r0, r0, lr, lsr r0
   1045c:	00000014 	andeq	r0, r0, r4, lsl r0
   10460:	0000003e 	andeq	r0, r0, lr, lsr r0
   10464:	0000000e 	andeq	r0, r0, lr
   10468:	0000003e 	andeq	r0, r0, lr, lsr r0
   1046c:	0000000d 	andeq	r0, r0, sp
   10470:	0000003e 	andeq	r0, r0, lr, lsr r0
   10474:	00000024 	andeq	r0, r0, r4, lsr #32
   10478:	0000003e 	andeq	r0, r0, lr, lsr r0
   1047c:	00000012 	andeq	r0, r0, r2, lsl r0
   10480:	0000003e 	andeq	r0, r0, lr, lsr r0
   10484:	00000027 	andeq	r0, r0, r7, lsr #32
   10488:	0000003e 	andeq	r0, r0, lr, lsr r0
   1048c:	00000002 	andeq	r0, r0, r2
   10490:	0000003e 	andeq	r0, r0, lr, lsr r0
   10494:	00000018 	andeq	r0, r0, r8, lsl r0
   10498:	0000003e 	andeq	r0, r0, lr, lsr r0
   1049c:	00000009 	andeq	r0, r0, r9
   104a0:	0000003e 	andeq	r0, r0, lr, lsr r0
   104a4:	0000000a 	andeq	r0, r0, sl
   104a8:	0000003e 	andeq	r0, r0, lr, lsr r0
	...

000104b4 <all_implied_fbits>:
   104b4:	0000003b 	andeq	r0, r0, fp, lsr r0
   104b8:	0000003e 	andeq	r0, r0, lr, lsr r0
   104bc:	0000000b 	andeq	r0, r0, fp
   104c0:	0000003e 	andeq	r0, r0, lr, lsr r0
   104c4:	00000010 	andeq	r0, r0, r0, lsl r0
   104c8:	0000003e 	andeq	r0, r0, lr, lsr r0
   104cc:	00000025 	andeq	r0, r0, r5, lsr #32
   104d0:	0000003e 	andeq	r0, r0, lr, lsr r0
   104d4:	00000033 	andeq	r0, r0, r3, lsr r0
   104d8:	0000003e 	andeq	r0, r0, lr, lsr r0
   104dc:	00000003 	andeq	r0, r0, r3
   104e0:	0000003e 	andeq	r0, r0, lr, lsr r0
   104e4:	00000006 	andeq	r0, r0, r6
   104e8:	0000003e 	andeq	r0, r0, lr, lsr r0
   104ec:	00000014 	andeq	r0, r0, r4, lsl r0
   104f0:	0000003e 	andeq	r0, r0, lr, lsr r0
   104f4:	0000000e 	andeq	r0, r0, lr
   104f8:	0000003e 	andeq	r0, r0, lr, lsr r0
   104fc:	0000000d 	andeq	r0, r0, sp
   10500:	0000003e 	andeq	r0, r0, lr, lsr r0
   10504:	00000024 	andeq	r0, r0, r4, lsr #32
   10508:	0000003e 	andeq	r0, r0, lr, lsr r0
   1050c:	00000012 	andeq	r0, r0, r2, lsl r0
   10510:	0000003e 	andeq	r0, r0, lr, lsr r0
   10514:	00000027 	andeq	r0, r0, r7, lsr #32
   10518:	0000003e 	andeq	r0, r0, lr, lsr r0
   1051c:	00000002 	andeq	r0, r0, r2
   10520:	0000003e 	andeq	r0, r0, lr, lsr r0
   10524:	00000018 	andeq	r0, r0, r8, lsl r0
   10528:	0000003e 	andeq	r0, r0, lr, lsr r0
   1052c:	00000009 	andeq	r0, r0, r9
   10530:	0000003e 	andeq	r0, r0, lr, lsr r0
   10534:	0000000a 	andeq	r0, r0, sl
   10538:	0000003e 	andeq	r0, r0, lr, lsr r0
	...

Disassembly of section .ARM.exidx:

00010544 <.ARM.exidx>:
   10544:	7ffffdb0 	svcvc	0x00fffdb0
   10548:	00000001 	andeq	r0, r0, r1

Disassembly of section .eh_frame:

0001054c <__FRAME_END__>:
   1054c:	00000000 	andeq	r0, r0, r0

Disassembly of section .init_array:

00020f10 <__frame_dummy_init_array_entry>:
   20f10:	000103e8 	andeq	r0, r1, r8, ror #7

Disassembly of section .fini_array:

00020f14 <__do_global_dtors_aux_fini_array_entry>:
   20f14:	000103c0 	andeq	r0, r1, r0, asr #7

Disassembly of section .dynamic:

00020f18 <_DYNAMIC>:
   20f18:	00000001 	andeq	r0, r0, r1
   20f1c:	00000019 	andeq	r0, r0, r9, lsl r0
   20f20:	0000000c 	andeq	r0, r0, ip
   20f24:	000102b0 			; <UNDEFINED> instruction: 0x000102b0
   20f28:	0000000d 	andeq	r0, r0, sp
   20f2c:	00010418 	andeq	r0, r1, r8, lsl r4
   20f30:	00000019 	andeq	r0, r0, r9, lsl r0
   20f34:	00020f10 	andeq	r0, r2, r0, lsl pc
   20f38:	0000001b 	andeq	r0, r0, fp, lsl r0
   20f3c:	00000004 	andeq	r0, r0, r4
   20f40:	0000001a 	andeq	r0, r0, sl, lsl r0
   20f44:	00020f14 	andeq	r0, r2, r4, lsl pc
   20f48:	0000001c 	andeq	r0, r0, ip, lsl r0
   20f4c:	00000004 	andeq	r0, r0, r4
   20f50:	6ffffef5 	svcvs	0x00fffef5
   20f54:	000101ac 	andeq	r0, r1, ip, lsr #3
   20f58:	00000005 	andeq	r0, r0, r5
   20f5c:	00010210 	andeq	r0, r1, r0, lsl r2
   20f60:	00000006 	andeq	r0, r0, r6
   20f64:	000101d0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   20f68:	0000000a 	andeq	r0, r0, sl
   20f6c:	00000047 	andeq	r0, r0, r7, asr #32
   20f70:	0000000b 	andeq	r0, r0, fp
   20f74:	00000010 	andeq	r0, r0, r0, lsl r0
   20f78:	00000015 	andeq	r0, r0, r5, lsl r0
   20f7c:	00000000 	andeq	r0, r0, r0
   20f80:	00000003 	andeq	r0, r0, r3
   20f84:	00021000 	andeq	r1, r2, r0
   20f88:	00000002 	andeq	r0, r0, r2
   20f8c:	00000018 	andeq	r0, r0, r8, lsl r0
   20f90:	00000014 	andeq	r0, r0, r4, lsl r0
   20f94:	00000011 	andeq	r0, r0, r1, lsl r0
   20f98:	00000017 	andeq	r0, r0, r7, lsl r0
   20f9c:	00010298 	muleq	r1, r8, r2
   20fa0:	00000011 	andeq	r0, r0, r1, lsl r0
   20fa4:	00010290 	muleq	r1, r0, r2
   20fa8:	00000012 	andeq	r0, r0, r2, lsl r0
   20fac:	00000008 	andeq	r0, r0, r8
   20fb0:	00000013 	andeq	r0, r0, r3, lsl r0
   20fb4:	00000008 	andeq	r0, r0, r8
   20fb8:	6ffffffe 	svcvs	0x00fffffe
   20fbc:	00010260 	andeq	r0, r1, r0, ror #4
   20fc0:	6fffffff 	svcvs	0x00ffffff
   20fc4:	00000001 	andeq	r0, r0, r1
   20fc8:	6ffffff0 	svcvs	0x00fffff0
   20fcc:	00010258 	andeq	r0, r1, r8, asr r2
	...

Disassembly of section .got:

00021000 <_GLOBAL_OFFSET_TABLE_>:
   21000:	00020f18 	andeq	r0, r2, r8, lsl pc
	...
   2100c:	000102bc 			; <UNDEFINED> instruction: 0x000102bc
   21010:	000102bc 			; <UNDEFINED> instruction: 0x000102bc
   21014:	000102bc 			; <UNDEFINED> instruction: 0x000102bc
   21018:	00000000 	andeq	r0, r0, r0
   2101c:	000103ec 	andeq	r0, r1, ip, ror #7

Disassembly of section .data:

00021020 <__data_start>:
   21020:	00000000 	andeq	r0, r0, r0

00021024 <__dso_handle>:
   21024:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss:

00021028 <completed.0>:
   21028:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__bss_end__+0x10afcf8>
   4:	62552820 	subsvs	r2, r5, #32, 16	; 0x200000
   8:	75746e75 	ldrbvc	r6, [r4, #-3701]!	; 0xfffff18b
   c:	2e313120 	rsfcssp	f3, f1, f0
  10:	2d302e33 	ldccs	14, cr2, [r0, #-204]!	; 0xffffff34
  14:	75627531 	strbvc	r7, [r2, #-1329]!	; 0xfffffacf
  18:	3175746e 	cmncc	r5, lr, ror #8
  1c:	2e32327e 	mrccs	2, 1, r3, cr2, cr14, {3}
  20:	20293430 	eorcs	r3, r9, r0, lsr r4
  24:	332e3131 			; <UNDEFINED> instruction: 0x332e3131
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002941 	andeq	r2, r0, r1, asr #18
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000001f 	andeq	r0, r0, pc, lsl r0
  10:	00543505 	subseq	r3, r4, r5, lsl #10
  14:	01080306 	tsteq	r8, r6, lsl #6
  18:	04120109 	ldreq	r0, [r2], #-265	; 0xfffffef7
  1c:	01140113 	tsteq	r4, r3, lsl r1
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	000103ec 	andeq	r0, r1, ip, ror #7
  14:	0000002c 	andeq	r0, r0, ip, lsr #32
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000af 	andeq	r0, r0, pc, lsr #1
   4:	04010005 	streq	r0, [r1], #-5
   8:	00000000 	andeq	r0, r0, r0
   c:	00002f04 	andeq	r2, r0, r4, lsl #30
  10:	000e1d00 	andeq	r1, lr, r0, lsl #26
  14:	00bc0000 	adcseq	r0, ip, r0
  18:	03ec0000 	mvneq	r0, #0
  1c:	002c0001 	eoreq	r0, ip, r1
  20:	00000000 	andeq	r0, r0, r0
  24:	04010000 	streq	r0, [r1], #-0
  28:	00002207 	andeq	r2, r0, r7, lsl #4
  2c:	08010100 	stmdaeq	r1, {r8}
  30:	00000091 	muleq	r0, r1, r0
  34:	a9070201 	stmdbge	r7, {r0, r9}
  38:	01000000 	mrseq	r0, (UNDEF: 0)
  3c:	001d0704 	andseq	r0, sp, r4, lsl #14
  40:	01010000 	mrseq	r0, (UNDEF: 1)
  44:	00009306 	andeq	r9, r0, r6, lsl #6
  48:	05020100 	streq	r0, [r2, #-256]	; 0xffffff00
  4c:	000000da 	ldrdeq	r0, [r0], -sl
  50:	69050405 	stmdbvs	r5, {r0, r2, sl}
  54:	0100746e 	tsteq	r0, lr, ror #8
  58:	00000508 	andeq	r0, r0, r8, lsl #10
  5c:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
  60:	00001807 	andeq	r1, r0, r7, lsl #16
  64:	05040100 	streq	r0, [r4, #-256]	; 0xffffff00
  68:	00000005 	andeq	r0, r0, r5
  6c:	00007102 	andeq	r7, r0, r2, lsl #2
  70:	08010100 	stmdaeq	r1, {r8}
  74:	0000009a 	muleq	r0, sl, r0
  78:	00009f06 	andeq	r9, r0, r6, lsl #30
  7c:	05030100 	streq	r0, [r3, #-256]	; 0xffffff00
  80:	00000050 	andeq	r0, r0, r0, asr r0
  84:	000103ec 	andeq	r0, r1, ip, ror #7
  88:	0000002c 	andeq	r0, r0, ip, lsr #32
  8c:	00ad9c01 	adceq	r9, sp, r1, lsl #24
  90:	a4030000 	strge	r0, [r3], #-0
  94:	0f000000 	svceq	0x00000000
  98:	00000050 	andeq	r0, r0, r0, asr r0
  9c:	03749102 	cmneq	r4, #-2147483648	; 0x80000000
  a0:	000000e4 	andeq	r0, r0, r4, ror #1
  a4:	0000ad1c 	andeq	sl, r0, ip, lsl sp
  a8:	70910200 	addsvc	r0, r1, r0, lsl #4
  ac:	006c0200 	rsbeq	r0, ip, r0, lsl #4
  b0:	Address 0x00000000000000b0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	0b002401 	bleq	900c <__abi_tag-0x7180>
   4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
   8:	0200000e 	andeq	r0, r0, #14
   c:	210b000f 	tstcs	fp, pc
  10:	00134904 	andseq	r4, r3, r4, lsl #18
  14:	00050300 	andeq	r0, r5, r0, lsl #6
  18:	213a0e03 	teqcs	sl, r3, lsl #28
  1c:	03213b01 			; <UNDEFINED> instruction: 0x03213b01
  20:	13490b39 	movtne	r0, #39737	; 0x9b39
  24:	00001802 	andeq	r1, r0, r2, lsl #16
  28:	25011104 	strcs	r1, [r1, #-260]	; 0xfffffefc
  2c:	030b130e 	movweq	r1, #45838	; 0xb30e
  30:	110e1b0e 	tstne	lr, lr, lsl #22
  34:	10061201 	andne	r1, r6, r1, lsl #4
  38:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
  3c:	0b0b0024 	bleq	2c00d4 <__bss_end__+0x29f0a8>
  40:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  44:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
  48:	03193f01 	tsteq	r9, #1, 30
  4c:	3b0b3a0e 	blcc	2ce88c <__bss_end__+0x2ad860>
  50:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  54:	11134919 	tstne	r3, r9, lsl r9
  58:	40061201 	andmi	r1, r6, r1, lsl #4
  5c:	01197a18 	tsteq	r9, r8, lsl sl
  60:	00000013 	andeq	r0, r0, r3, lsl r0

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000003d 	andeq	r0, r0, sp, lsr r0
   4:	00200003 	eoreq	r0, r0, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	00010000 	andeq	r0, r1, r0
  1c:	61726373 	cmnvs	r2, r3, ror r3
  20:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
  24:	00000063 	andeq	r0, r0, r3, rrx
  28:	01050000 	mrseq	r0, (UNDEF: 5)
  2c:	ec020500 	cfstr32	mvfx0, [r2], {-0}
  30:	15000103 	strne	r0, [r0, #-259]	; 0xfffffefd
  34:	05a00905 	streq	r0, [r0, #2309]!	; 0x905
  38:	2e0d0301 	cdpcs	3, 0, cr0, cr13, cr1, {0}
  3c:	01000a02 	tsteq	r0, r2, lsl #20
  40:	Address 0x0000000000000040 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	000103ec 	andeq	r0, r1, ip, ror #7
  1c:	0000002c 	andeq	r0, r0, ip, lsr #32
  20:	8b040e42 	blhi	103930 <__bss_end__+0xe2904>
  24:	0b0d4201 	bleq	350830 <__bss_end__+0x32f804>
  28:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
  2c:	00000ecb 	andeq	r0, r0, fp, asr #29

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
   4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
   8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
   c:	63730074 	cmnvs	r3, #116	; 0x74
  10:	63746172 	cmnvs	r4, #-2147483620	; 0x8000001c
  14:	00632e68 	rsbeq	r2, r3, r8, ror #28
  18:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
  1c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
  20:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
  24:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  28:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  2c:	4700746e 	strmi	r7, [r0, -lr, ror #8]
  30:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  34:	31203731 			; <UNDEFINED> instruction: 0x31203731
  38:	2e332e31 	mrccs	14, 1, r2, cr3, cr1, {1}
  3c:	6d2d2030 	stcvs	0, cr2, [sp, #-192]!	; 0xffffff40
  40:	616f6c66 	cmnvs	pc, r6, ror #24
  44:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  48:	6f733d69 	svcvs	0x00733d69
  4c:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  50:	736c746d 	cmnvc	ip, #1828716544	; 0x6d000000
  54:	6169642d 	cmnvs	r9, sp, lsr #8
  58:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
  5c:	756e673d 	strbvc	r6, [lr, #-1853]!	; 0xfffff8c3
  60:	616d2d20 	cmnvs	sp, r0, lsr #26
  64:	2d206d72 	stccs	13, cr6, [r0, #-456]!	; 0xfffffe38
  68:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  6c:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  70:	7435766d 	ldrtvc	r7, [r5], #-1645	; 0xfffff993
  74:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  78:	7473662d 	ldrbtvc	r6, [r3], #-1581	; 0xfffff9d3
  7c:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
  80:	746f7270 	strbtvc	r7, [pc], #-624	; 88 <__abi_tag-0x10104>
  84:	6f746365 	svcvs	0x00746365
  88:	74732d72 	ldrbtvc	r2, [r3], #-3442	; 0xfffff28e
  8c:	676e6f72 			; <UNDEFINED> instruction: 0x676e6f72
  90:	736e7500 	cmnvc	lr, #0, 10
  94:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  98:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  9c:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
  a0:	006e6961 	rsbeq	r6, lr, r1, ror #18
  a4:	63677261 	cmnvs	r7, #268435462	; 0x10000006
  a8:	6f687300 	svcvs	0x00687300
  ac:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
  b0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  b4:	2064656e 	rsbcs	r6, r4, lr, ror #10
  b8:	00746e69 	rsbseq	r6, r4, r9, ror #28
  bc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 8 <__abi_tag-0x10184>
  c0:	62612f65 	rsbvs	r2, r1, #404	; 0x194
  c4:	616e6968 	cmnvs	lr, r8, ror #18
  c8:	72612f76 	rsbvc	r2, r1, #472	; 0x1d8
  cc:	68735f6d 	ldmdavs	r3!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  d0:	636c6c65 	cmnvs	ip, #25856	; 0x6500
  d4:	2f65646f 	svccs	0x0065646f
  d8:	68730063 	ldmdavs	r3!, {r0, r1, r5, r6}^
  dc:	2074726f 	rsbscs	r7, r4, pc, ror #4
  e0:	00746e69 	rsbseq	r6, r4, r9, ror #28
  e4:	76677261 	strbtvc	r7, [r7], -r1, ror #4
	...
